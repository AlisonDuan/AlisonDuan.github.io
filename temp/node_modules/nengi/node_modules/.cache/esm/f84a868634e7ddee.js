let Chunk,BinaryType,Binary,writeMessage;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("../Chunk",[["Chunk",["Chunk"],function(v){Chunk=v}]]);_34e‍.w("../../binary/BinaryType",[["default",["BinaryType"],function(v){BinaryType=v}]]);_34e‍.w("../../binary/Binary",[["default",["Binary"],function(v){Binary=v}]]);_34e‍.w("../../protocol/write/writeMessage",[["default",["writeMessage"],function(v){writeMessage=v}]]);




function writeCreateEntities(chunkType, bitStream, entities) {
    if (entities.length > 0) {

        bitStream[Binary[BinaryType.UInt8].write](chunkType)

        // number of entities
        bitStream[Binary[BinaryType.UInt16].write](entities.length)

        for (var i = 0; i < entities.length; i++) {
            var entity = entities[i]
            writeMessage(bitStream, entity, entity.protocol)
        }
    }
}

_34e‍.d(writeCreateEntities);