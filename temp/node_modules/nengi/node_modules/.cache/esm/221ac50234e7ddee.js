let BitBuffer,BitStream,countMessagesBits,writeMessages,writeCreateEntities,writeLocalEvents,countBatchesBits,writeBatches,countSinglePropsBits,writeSingleProps,countDeleteEntitiesBits,writeDeleteEntities,countJSONsBits,writeJSONs,countTimesyncBits,writeTimesync,countPingBits,writePing,writeEngineMessages,Chunk;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("../../binary/BitBuffer",[["default",["BitBuffer"],function(v){BitBuffer=v}]]);_34e‍.w("../../binary/BitStream",[["default",["BitStream"],function(v){BitStream=v}]]);_34e‍.w("./countMessagesBits",[["default",["countMessagesBits"],function(v){countMessagesBits=v}]]);_34e‍.w("./writeMessages",[["default",["writeMessages"],function(v){writeMessages=v}]]);_34e‍.w("./writeCreateEntities",[["default",["writeCreateEntities"],function(v){writeCreateEntities=v}]]);_34e‍.w("./writeLocalEvents",[["default",["writeLocalEvents"],function(v){writeLocalEvents=v}]]);_34e‍.w("./countBatchesBits",[["default",["countBatchesBits"],function(v){countBatchesBits=v}]]);_34e‍.w("./writeBatches",[["default",["writeBatches"],function(v){writeBatches=v}]]);_34e‍.w("./countSinglePropsBits",[["default",["countSinglePropsBits"],function(v){countSinglePropsBits=v}]]);_34e‍.w("./writeSingleProps",[["default",["writeSingleProps"],function(v){writeSingleProps=v}]]);_34e‍.w("./countDeleteEntitiesBits",[["default",["countDeleteEntitiesBits"],function(v){countDeleteEntitiesBits=v}]]);_34e‍.w("./writeDeleteEntities",[["default",["writeDeleteEntities"],function(v){writeDeleteEntities=v}]]);_34e‍.w("./countJSONsBits",[["default",["countJSONsBits"],function(v){countJSONsBits=v}]]);_34e‍.w("./writeJSONs",[["default",["writeJSONs"],function(v){writeJSONs=v}]]);_34e‍.w("./countTimesyncBits",[["default",["countTimesyncBits"],function(v){countTimesyncBits=v}]]);_34e‍.w("./writeTimesync",[["default",["writeTimesync"],function(v){writeTimesync=v}]]);_34e‍.w("./countPingBits",[["default",["countPingBits"],function(v){countPingBits=v}]]);_34e‍.w("./writePing",[["default",["writePing"],function(v){writePing=v}]]);_34e‍.w("./writeEngineMessages",[["default",["writeEngineMessages"],function(v){writeEngineMessages=v}]]);_34e‍.w("../Chunk",[["Chunk",["Chunk"],function(v){Chunk=v}]]);




















//var countTransferBits = require('./countTransferBits')
//var writeTransfer = require('./writeTransfer')


function createSnapshotBuffer(snapshot, config) {
    var bits = 0
    bits += 40

    bits += countMessagesBits(snapshot.engineMessages)
    bits += countPingBits(snapshot.pingKey)
    bits += countTimesyncBits(snapshot.timestamp)

    bits += countMessagesBits(snapshot.createEntities)
    bits += countSinglePropsBits(snapshot.updateEntities.partial)
    //bits += countBatchesBits(snapshot.updateEntities.optimized)
    bits += countDeleteEntitiesBits(snapshot.deleteEntities, config)

    //bits += countMessagesBits(snapshot.createComponents)
    //bits += countSinglePropsBits(snapshot.updateComponents.partial)
    //bits += countDeleteEntitiesBits(snapshot.deleteComponents, config)
   
	bits += countMessagesBits(snapshot.localEvents)
	//console.log('ss msg', snapshot.messages)
	//if (snapshot.messages && snapshot.messages[1]) {
	//	console.log('HHHH', snapshot.messages[1].outers[0])
	//}
    bits += countMessagesBits(snapshot.messages)
    bits += countJSONsBits(snapshot.jsons)

    //console.log('partials', snapshot.updateEntities.partial)
    var bitBuffer = new BitBuffer(bits)
    var bitStream = new BitStream(bitBuffer)

    bitStream.writeUInt8(Chunk.ClientTick)
    bitStream.writeUInt32(snapshot.clientTick)

    writeEngineMessages(bitStream, snapshot.engineMessages)
    writePing(bitStream, snapshot.pingKey)
    writeTimesync(bitStream, snapshot.timestamp, snapshot.avgLatency)

    writeCreateEntities(Chunk.CreateEntities, bitStream, snapshot.createEntities)
    writeSingleProps(Chunk.UpdateEntitiesPartial, bitStream, snapshot.updateEntities.partial)
    //writeBatches(bitStream, snapshot.updateEntities.optimized)
    writeDeleteEntities(Chunk.DeleteEntities, bitStream, snapshot.deleteEntities, config)

    //writeCreateEntities(Chunk.CreateComponents, bitStream, snapshot.createComponents)
    //writeSingleProps(Chunk.UpdateComponentsPartial, bitStream, snapshot.updateComponents.partial)
    //writeDeleteEntities(Chunk.DeleteComponents, bitStream, snapshot.deleteComponents, config)
    
    writeLocalEvents(bitStream, snapshot.localEvents)
    writeMessages(bitStream, snapshot.messages)
    writeJSONs(bitStream, snapshot.jsons)

    //console.log('wrote', bits)

    return bitBuffer
}

_34e‍.d(createSnapshotBuffer);
