let BinaryType,Binary,readBatch;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("../../binary/BinaryType",[["default",["BinaryType"],function(v){BinaryType=v}]]);_34e‍.w("../../binary/Binary",[["default",["Binary"],function(v){Binary=v}]]);_34e‍.w("../../protocol/read/readBatch",[["default",["readBatch"],function(v){readBatch=v}]]);



function readBatches(bitStream, entityCache) {  
    var length = bitStream[Binary[BinaryType.UInt16].read]()

    var batches = []
    for (var i = 0; i < length; i++) {
        var batch = readBatch(bitStream, entityCache)
        batches.push(batch)
    }
    return batches
}

_34e‍.d(readBatches);