let Chunk,BinaryType,Binary,writeMessage;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("../Chunk",[["Chunk",["Chunk"],function(v){Chunk=v}]]);_34e‍.w("../../binary/BinaryType",[["default",["BinaryType"],function(v){BinaryType=v}]]);_34e‍.w("../../binary/Binary",[["default",["Binary"],function(v){Binary=v}]]);_34e‍.w("../../protocol/write/writeMessage",[["default",["writeMessage"],function(v){writeMessage=v}]]);




function writeLocalEvents(bitStream, localEvents) {
    if (localEvents.length > 0) {

        bitStream[Binary[BinaryType.UInt8].write](Chunk.LocalEvents)  
        bitStream[Binary[BinaryType.UInt16].write](localEvents.length)

        localEvents.forEach(localEvent => {
            writeMessage(bitStream, localEvent, localEvent.protocol)
        })
    }
}

_34e‍.d(writeLocalEvents);