let BitBuffer,BitStream,Chunk,countCommandsBits,writeCommands;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("../../binary/BitBuffer",[["default",["BitBuffer"],function(v){BitBuffer=v}]]);_34e‍.w("../../binary/BitStream",[["default",["BitStream"],function(v){BitStream=v}]]);_34e‍.w("../Chunk",[["Chunk",["Chunk"],function(v){Chunk=v}]]);_34e‍.w("./countCommandsBits",[["default",["countCommandsBits"],function(v){countCommandsBits=v}]]);_34e‍.w("./writeCommands",[["default",["writeCommands"],function(v){writeCommands=v}]]);





function createCommandBuffer(tick, commands) {
    var bits = 0
    bits += 8
    bits += 32
    bits += countCommandsBits(commands)

    var bitBuffer = new BitBuffer(bits)
    var bitStream = new BitStream(bitBuffer)

    bitStream.writeUInt8(Chunk.ClientTick)
    bitStream.writeUInt32(tick)
    writeCommands(bitStream, commands)

    return bitBuffer
}

_34e‍.d(createCommandBuffer);