let Chunk,BinaryType,Binary,writeJSON;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("../Chunk",[["Chunk",["Chunk"],function(v){Chunk=v}]]);_34e‍.w("../../binary/BinaryType",[["default",["BinaryType"],function(v){BinaryType=v}]]);_34e‍.w("../../binary/Binary",[["default",["Binary"],function(v){Binary=v}]]);_34e‍.w("../../protocol/write/writeJSON",[["default",["writeJSON"],function(v){writeJSON=v}]]);




function writeJSONs(bitStream, jsons) {
    if (jsons.length > 0) {

        bitStream[Binary[BinaryType.UInt8].write](Chunk.JSONs)

        // number of messages
        bitStream[Binary[BinaryType.UInt16].write](jsons.length)

        jsons.forEach(json => {
            writeJSON(bitStream, json)
        })
    }
}

_34e‍.d(writeJSONs);