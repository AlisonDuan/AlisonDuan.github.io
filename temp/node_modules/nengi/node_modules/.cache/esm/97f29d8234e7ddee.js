let BinaryType,Binary,countPartialBits;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("../../binary/BinaryType",[["default",["BinaryType"],function(v){BinaryType=v}]]);_34e‍.w("../../binary/Binary",[["default",["Binary"],function(v){Binary=v}]]);_34e‍.w("../../protocol/countBits/countSingleBits",[["default",["countPartialBits"],function(v){countPartialBits=v}]]);



function countSinglePropsBits(singleProps) {
	var bits = 0
    if (singleProps.length > 0) {
        bits += Binary[BinaryType.UInt8].bits
        bits += Binary[BinaryType.UInt16].bits
        for (var i = 0; i < singleProps.length; i++) {
            var singleProp = singleProps[i]
            bits += countPartialBits(singleProp)
        }
    }
    return bits
}

_34e‍.d(countSinglePropsBits);