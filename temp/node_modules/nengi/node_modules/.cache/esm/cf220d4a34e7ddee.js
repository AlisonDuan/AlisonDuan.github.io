let Chunk,BinaryType,Binary,writeDeleteId;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("../Chunk",[["Chunk",["Chunk"],function(v){Chunk=v}]]);_34e‍.w("../../binary/BinaryType",[["default",["BinaryType"],function(v){BinaryType=v}]]);_34e‍.w("../../binary/Binary",[["default",["Binary"],function(v){Binary=v}]]);_34e‍.w("../../protocol/write/writeDeleteId",[["default",["writeDeleteId"],function(v){writeDeleteId=v}]]);



//var config = require('../../../config')

function writeDeleteEntities(chunkType, bitStream, ids, config) {
    if (ids.length > 0) {
        bitStream[Binary[BinaryType.UInt8].write](chunkType)  
        bitStream[Binary[BinaryType.UInt16].write](ids.length)        
        ids.forEach(id => {
            writeDeleteId(bitStream, config.ID_BINARY_TYPE, id)
        })
    }
}

_34e‍.d(writeDeleteEntities);